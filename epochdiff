#!/bin/bash
# epochdiff - shell script
# ------------------------
# Enter any number of args (time in the form of
# seconds since the epoch; Jan 1st, 1970, midnight)
# as the user. epochdiff will output the current
# seconds-since-epoch and the absolute difference
# between the argument and the current measurements.
# Powered by the 'date' util.
# Authored by brianc2788@gmail.com

EPOCH_NOW=$(date +%s)

function usage() {
	echo "Usage: >$ epochdiff <epoch_string> <...>"
	exit 0
}

function print_diff() {
	local -i nArg=$1
	local -i nEpoch=$2
	local -i DIFF=0
	if [ ${nArg} -gt ${nEpoch} ];then
		DIFF=${nArg}-${nEpoch}
		echo ${DIFF}
	elif [ ${nArg} -lt ${nEpoch} ];then
		DIFF=${nEpoch}-${nArg}
		echo ${DIFF}
	fi
}

# No args; produce the current seconds since the epoch, print usage, and exit.
if [ $# -lt 1 ];then
	echo "Current seconds since the epoch: ${EPOCH_NOW}"
	usage
else
	echo "Current Epoch: ${EPOCH_NOW}"
fi

# Loop through arguments with print_diff().
for arg in $@
do
	print_diff ${arg} ${EPOCH_NOW}
done
