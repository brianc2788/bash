#!/usr/bin/bash
# ----------------------------------------------------------
# airsnipe-ip.sh
# ----------------------------------------------------------
# Just thought it might help me remember the switches for
# aireplay-ng. That and make my own script-kiddie wrapper
# around actual hacking tools; complete with way too much
# termcolor. There's not a ton of control mechanisms (zero) and
# there may not ever be due to the personalized nature therein.
# But dammit, colors. And I can say I wrote 100-line sh script.
# http://brianc2788.github.io/
# ----------------------------------------------------------

## Terminal colors. Be sure to enable backslash-escapes with echo.
RED="\033[01;31m"
GRE="\033[01;32m"
YEL="\033[01;33m"
RST="\033[00m"

## Prefixes, prompt effects.
PRE_ATT="${YEL}[${RED}!${YEL}]${RST}"    # ATTENTION
PRE_NFO="${YEL}[i${YEL}]${RST}"    # INFORMATION
PRE_USR="${YEL}[${GRE}+${YEL}]"    # USER-INPUT

echo -e "${PRE_USR} ------------------------------------------------------------------- ${PRE_USR}"
echo -e "${PRE_ATT} ${GRE}AIRSNIPE-IP${RST} - Bash script. Interactive aireplay-ng wrapper."
echo -e "${PRE_NFO} ${RST}http://brianc2788.github.io/${RST}"
echo -en "${PRE_USR} ------------------------------------------------------------------- ${PRE_USR}\n\n"

# Check for root priviledges.
if [ ${EUID} -ne 0 ];then
    echo -e "${PRE_ATT} ${RED}Priviledged account required to access wireless & raw socket interfaces.\n    Abort...."
    exit
fi

# GLOBALS - TODO: get from user and/or argv.
AP_CH=""
AP_MAC=""
#AP_IP=""

STA_IP=""
#STA_MAC=""

IFACE="wlan0mon" # Default if name for airmon-ng.
COUNT=""

#echo -e "Enter AP MAC: "
#read $APMAC
echo -en "${YEL}[!] ${RST}Enter AP channel: "
read ${AP_CH}
echo -en "${PRE_USR} Enter target IP: ${RST}"
read ${STA_IP}
echo -e "${PRE_NFO} Need number of deauths to send."
echo -e "${PRE_NFO} Use 0 for continuous deauths. Ctrl+c to stop."
echo -en "${PRE_USR} Enter: "
read ${COUNT}

echo -en "\n${PRE_NFO} ${GRE}Running aircrack-ng tools: "
echo -e "${RST}airmon-ng, aireplay-ng (mode 4)"
echo -en "${PRE_USR} ------------------------------------------------------------------- ${PRE_USR}\n\n"

# User needs to enter creds via PAM. Use systemctl or sudo??
service NetworkManager stop
service wpa_supplicant stop

# Change wireless interface to monitor mode with airmon-ng. Disabled for debugging.
# TODO: Exchange airmon with os utils (ifconfig, iw, ip, and maybe gnu macchanger). Set a default value for $IFACE.
#airmon-ng check kill
#airmon-ng start wlan0 $APCH
sudo ifconfig ${IFACE} down
sudo iw ${IFACE} set type monitor
sudo macchanger -rb ${IFACE}
sudo ifconfig ${IFACE} up

# target options:    -k <targetIP> or -c <targetMAC>
#aireplay-ng --deauth ${COUNT} -a ${AP_MAC} -k ${STA_IP} ${IFACE}

# Restore interface to managed mode.
# Originally, wanted to run remotely on a raspberry pi 4B - Lol.
echo -en "\n"
echo -e "${PRE_NFO} ${YEL}Restoring interface to managed mode, restarting networking daemons...${RST}"
#airmon-ng stop wlan0mon
sudo ifconfig ${IFACE} down
sudo iw ${IFACE} set type managed
sudo macchanger -p ${IFACE}
sudo ifconfig ${IFACE} up
service networking restart

echo -e "\n${PRE_NFO} ${RED}Exiting${RST}...."

